{
  "name": "CNV-Sim",
  "tagline": "Copy Number Variations (CNV) Simulator",
  "body": "# Copy Number Variation Simulator (CNV-Sim)\r\nIn genomics, Copy Number Variations (CNVs) is a type of structural variation in a genome where sections of the genome are repeated. \r\nThe number if repetitions (duplications) varies between individuals in the human population.\r\n\r\nThe Copy Number Variation Simulator (CNV Sim) is a tool used to generate a set of artificial DNA fragments for Next Generation Sequencing (NGS) read simulation.\r\nWhen aligned back to the reference genome, the artificial generated reads show variations in the CNV regions. Variations can be either amplifications of deletions.\r\n\r\nCNV-Sim offers two types of simulation:\r\n\r\n- CNV simulation in whole genome. CNV-Sim wraps the functionality of [ART](http://www.niehs.nih.gov/research/resources/software/biostatistics/art/) to introduce variations in the genome.\r\n- CNV simulation in whole exome. CNV-Sim wraps the functionality of [Wessim](https://github.com/sak042/Wessim) to introduce variations in the targets.  \r\n\r\n## Use CNV-Sim\r\n\r\n### Download as a standalone application\r\nRun the setup script appropriate for your operating system to install required dependencies.\r\n\r\nRefer to the below [CNV-Sim options](#cnv-sim-options) section for more details on how to use all available command-line options\r\n\r\n### Download as a Docker container\r\nWe prefer that you run CNV-Sim from the [Docker](http://www.docker.com) container as it has all the dependencies installed inside yet; no need to go through any of the setup scripts included here.\r\n\r\n*New to Docker?* Read this [blog post](https://www.toptal.com/devops/getting-started-with-docker-simplifying-devops) to understand how it works\r\n(yet you don't need to be a Docker expert to get CNV-Sim Docker container running!).\r\n\r\n*Install Docker:* [Linux](https://docs.docker.com/engine/installation/#/on-linux), [Mac OS](https://docs.docker.com/docker-for-mac/) and [Windows](https://docs.docker.com/docker-for-windows/)\r\n\r\n*How to use CNV-Sim from Docker container:*\r\n\r\n\r\n```shell\r\ndocker run -v <absolute_local_path_to_input_directory>:/my_data nabavilab/cnv-sim ./cnv-sim.py -o /my_data/<simulation_name> [OPTIONS] {genome, exome} /my_data/<genome_file> [/my_data/<target_file>]\r\n```\r\n\r\nwhere:\r\n\r\n- `<absolute_local_path_to_input_directory>` is the directory where the required input files exist (genome.fa and target.bed if using exome simulation); *MUST* be absolute path \r\n- `<simulation_name>` is used as the name of the output folder in your data directory, where the output of CNV Sim will be saved\r\n- `<genome_file>` is the FASTA file name for the genome reference\r\n- `<target_file>` is the BED file name for the targets (only if using exome as the simulation type)\r\n\r\nRefer to the below [CNV-Sim options](#cnv-sim-options) section for more details on how to use all available command-line options\r\n\r\n\r\n### Use from Galaxy\r\n\r\nCNV-Sim is available as a [Galaxy](https://galaxyproject.org/) tool. \r\n\r\nDownload it from the Galaxy Tool Shed: [https://toolshed.g2.bx.psu.edu/view/ahosny/cnvsim/](https://toolshed.g2.bx.psu.edu/view/ahosny/cnvsim/)\r\n\r\n\r\n## Required Input\r\n### whole genome\r\n- Reference genome in [FASTA](https://en.wikipedia.org/wiki/FASTA_format) format.\r\n\r\n### whole exome\r\n- Reference genome in [FASTA](https://en.wikipedia.org/wiki/FASTA_format) format.\r\n- Target exons file in [BED](https://genome.ucsc.edu/FAQ/FAQformat.html#format1) format. \r\nThe exome consists of introns and exons. The target file here should indicate the start and end positions of exons (not exomes).\r\n \r\n## CNV-Sim options\r\n```\r\nusage: cnv-sim.py [-h] [-o OUTPUT_DIR_NAME] [-n N_READS] [-l READ_LENGTH]\r\n                  [--cnv_list CNV_LIST] [-g REGIONS_COUNT] [-a AMPLIFICATIONS]\r\n                  [-d DELETIONS] [-min MINIMUM] [-max MAXIMUM]\r\n                  {genome,exome} genome [target]\r\n\r\npositional arguments:\r\n  {genome,exome}        simulate copy number variations in whole genome or\r\n                        exome regions\r\n  genome                path to the referece genome file in FASTA format\r\n  target                path to the target regions file in BED format (if\r\n                        using exome) (default: None)\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -o OUTPUT_DIR_NAME, --output_dir_name OUTPUT_DIR_NAME\r\n                        a name to be used to create the output directory\r\n                        (overrides existing directory with the same name).\r\n                        (default: test)\r\n  -n N_READS, --n_reads N_READS\r\n                        total number of reads without variations (default:\r\n                        10000)\r\n  -l READ_LENGTH, --read_length READ_LENGTH\r\n                        read length (bp) (default: 100)\r\n  --cnv_list CNV_LIST   path to a CNV list file in BED format chr | start |\r\n                        end | variation. If not passed, it is randomly\r\n                        generated using CNV list parameters below (default:\r\n                        None)\r\n\r\nCNV list parameters:\r\n  parameters to be used if CNV list is not passed\r\n\r\n  -g REGIONS_COUNT, --regions_count REGIONS_COUNT\r\n                        number of CNV regions to be randomly generated\r\n                        (default: 30)\r\n  -a AMPLIFICATIONS, --amplifications AMPLIFICATIONS\r\n                        percentage of amplifications in range [0.0: 1.0].\r\n                        (default: 0.3)\r\n  -d DELETIONS, --deletions DELETIONS\r\n                        percentage of deletions in range [0.0: 1.0]. (default:\r\n                        0.2)\r\n  -min MINIMUM, --minimum MINIMUM\r\n                        minimum number of amplifications/deletions introduced\r\n                        (default: 3)\r\n  -max MAXIMUM, --maximum MAXIMUM\r\n                        maximum number of amplifications/deletions introduced\r\n                        (default: 10)\r\n```\r\n## Licnese\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2016 NabaviLab\r\n\r\n## Authors and Contributors\r\nAbdelrahman Hosny (@abdelrahmanhosny) and Sheida Nabavi (@sheidaN)\r\n\r\n## Support or Contact\r\nHaving trouble with running CNV-Sim? [contact us](mailto:abdelrahman.hosny@ieee.org) and weâ€™ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}